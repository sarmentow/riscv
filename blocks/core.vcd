$date
	Wed Jan 19 15:30:14 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ! \registers[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 " \registers[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 # \registers[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 $ \registers[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 % \registers[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 & \registers[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ' \registers[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ( \registers[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ) \registers[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 * \registers[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 + \registers[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 , \registers[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 - \registers[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 . \registers[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 / \registers[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 0 \registers[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 1 \registers[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 2 \registers[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 3 \registers[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 4 \registers[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 5 \registers[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 6 \registers[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 7 \registers[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 8 \registers[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 9 \registers[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 : \registers[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ; \registers[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 < \registers[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 = \registers[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 > \registers[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ? \registers[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 @ \registers[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A \memory[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B \memory[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C \memory[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D \memory[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E \memory[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F \memory[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G \memory[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H \memory[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I \memory[8] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J \memory[9] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K \memory[10] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L \memory[11] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 M \memory[12] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 N \memory[13] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 O \memory[14] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 P \memory[15] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Q \memory[16] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 R \memory[17] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 S \memory[18] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 T \memory[19] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 U \memory[20] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 V \memory[21] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 W \memory[22] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 X \memory[23] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Y \memory[24] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Z \memory[25] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 [ \memory[26] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 \ \memory[27] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ] \memory[28] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ^ \memory[29] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 _ \memory[30] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ` \memory[31] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 a \memory[32] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 b \memory[33] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 c \memory[34] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 d \memory[35] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 e \memory[36] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 f \memory[37] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 g \memory[38] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 h \memory[39] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 i \memory[40] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 j \memory[41] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 k \memory[42] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 l \memory[43] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 m \memory[44] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 n \memory[45] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 o \memory[46] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 p \memory[47] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 q \memory[48] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 r \memory[49] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 s \memory[50] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 t \memory[51] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 u \memory[52] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 v \memory[53] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 w \memory[54] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 x \memory[55] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 y \memory[56] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 z \memory[57] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 { \memory[58] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 | \memory[59] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 } \memory[60] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ~ \memory[61] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 !" \memory[62] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 "" \memory[63] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 #" \memory[64] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 $" \memory[65] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 %" \memory[66] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 &" \memory[67] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 '" \memory[68] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 (" \memory[69] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 )" \memory[70] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 *" \memory[71] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 +" \memory[72] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ," \memory[73] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 -" \memory[74] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ." \memory[75] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 /" \memory[76] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 0" \memory[77] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 1" \memory[78] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 2" \memory[79] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 3" \memory[80] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 4" \memory[81] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 5" \memory[82] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 6" \memory[83] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 7" \memory[84] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 8" \memory[85] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 9" \memory[86] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 :" \memory[87] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ;" \memory[88] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 <" \memory[89] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 =" \memory[90] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 >" \memory[91] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ?" \memory[92] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 @" \memory[93] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A" \memory[94] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B" \memory[95] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C" \memory[96] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D" \memory[97] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E" \memory[98] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F" \memory[99] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G" \memory[100] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H" \memory[101] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I" \memory[102] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J" \memory[103] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K" \memory[104] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L" \memory[105] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 M" \memory[106] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 N" \memory[107] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 O" \memory[108] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 P" \memory[109] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Q" \memory[110] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 R" \memory[111] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 S" \memory[112] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 T" \memory[113] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 U" \memory[114] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 V" \memory[115] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 W" \memory[116] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 X" \memory[117] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Y" \memory[118] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Z" \memory[119] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 [" \memory[120] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 \" \memory[121] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ]" \memory[122] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ^" \memory[123] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 _" \memory[124] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 `" \memory[125] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 a" \memory[126] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 b" \memory[127] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 c" \memory[128] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 d" \memory[129] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 e" \memory[130] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 f" \memory[131] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 g" \memory[132] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 h" \memory[133] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 i" \memory[134] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 j" \memory[135] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 k" \memory[136] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 l" \memory[137] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 m" \memory[138] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 n" \memory[139] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 o" \memory[140] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 p" \memory[141] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 q" \memory[142] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 r" \memory[143] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 s" \memory[144] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 t" \memory[145] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 u" \memory[146] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 v" \memory[147] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 w" \memory[148] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 x" \memory[149] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 y" \memory[150] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 z" \memory[151] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 {" \memory[152] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 |" \memory[153] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 }" \memory[154] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ~" \memory[155] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 !# \memory[156] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 "# \memory[157] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ## \memory[158] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 $# \memory[159] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 %# \memory[160] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 &# \memory[161] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 '# \memory[162] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 (# \memory[163] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 )# \memory[164] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 *# \memory[165] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 +# \memory[166] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ,# \memory[167] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 -# \memory[168] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 .# \memory[169] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 /# \memory[170] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 0# \memory[171] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 1# \memory[172] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 2# \memory[173] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 3# \memory[174] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 4# \memory[175] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 5# \memory[176] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 6# \memory[177] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 7# \memory[178] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 8# \memory[179] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 9# \memory[180] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 :# \memory[181] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ;# \memory[182] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 <# \memory[183] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 =# \memory[184] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ># \memory[185] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ?# \memory[186] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 @# \memory[187] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A# \memory[188] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B# \memory[189] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C# \memory[190] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D# \memory[191] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E# \memory[192] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F# \memory[193] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G# \memory[194] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H# \memory[195] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I# \memory[196] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J# \memory[197] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K# \memory[198] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L# \memory[199] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$var reg 1 M# clk $end
$scope module c $end
$var wire 1 M# clk $end
$var wire 1 N# pc_write $end
$var wire 1 O# should_branch $end
$var wire 32 P# rs2 [31:0] $end
$var wire 32 Q# rs1 [31:0] $end
$var wire 1 R# regfile_write $end
$var wire 3 S# regfile_data_source_sel [2:0] $end
$var wire 32 T# regfile_data [31:0] $end
$var wire 32 U# pc_out [31:0] $end
$var wire 2 V# pc_next_sel [1:0] $end
$var wire 32 W# pc_next_line [31:0] $end
$var wire 32 X# pc_next [31:0] $end
$var wire 32 Y# lui_val [31:0] $end
$var wire 32 Z# jalr_address_calc_last_bit_not_set [31:0] $end
$var wire 32 [# jalr_address_calc [31:0] $end
$var wire 32 \# jal_address_calc [31:0] $end
$var wire 32 ]# ins [31:0] $end
$var wire 1 ^# imm_alu_sel $end
$var wire 1 _# dmem_write $end
$var wire 32 `# dmem_out [31:0] $end
$var wire 32 a# dmem_data_size_out [31:0] $end
$var wire 32 b# dmem_data [31:0] $end
$var wire 32 c# dmem_address_calc [31:0] $end
$var wire 32 d# branch_addr [31:0] $end
$var wire 32 e# auipc_val [31:0] $end
$var wire 32 f# alu_out [31:0] $end
$var wire 32 g# alu_in [31:0] $end
$scope module alunit $end
$var wire 32 h# and_res [31:0] $end
$var wire 32 i# b [31:0] $end
$var wire 10 j# op [9:0] $end
$var wire 32 k# or_res [31:0] $end
$var wire 32 l# xor_res [31:0] $end
$var wire 32 m# srl_or_sra_res [31:0] $end
$var wire 32 n# sltu_res [31:0] $end
$var wire 32 o# slt_res [31:0] $end
$var wire 32 p# sll_res [31:0] $end
$var wire 32 q# out [31:0] $end
$var wire 32 r# mulhu_res [31:0] $end
$var wire 32 s# mulh_res [31:0] $end
$var wire 32 t# mul_res [31:0] $end
$var wire 32 u# add_or_sub_res [31:0] $end
$var wire 32 v# a [31:0] $end
$var reg 32 w# zero [31:0] $end
$scope module add_or_sub_circ $end
$var wire 32 x# b [31:0] $end
$var wire 1 y# op $end
$var wire 32 z# sub_res [31:0] $end
$var wire 32 {# out [31:0] $end
$var wire 32 |# adder_res [31:0] $end
$var wire 32 }# a [31:0] $end
$upscope $end
$scope module mulh_circ $end
$var wire 32 ~# b [31:0] $end
$var wire 32 !$ out [31:0] $end
$var wire 64 "$ full_result [63:0] $end
$var wire 64 #$ extended_b [63:0] $end
$var wire 64 $$ extended_a [63:0] $end
$var wire 32 %$ a [31:0] $end
$upscope $end
$scope module mulhu_circ $end
$var wire 32 &$ b [31:0] $end
$var wire 32 '$ out [31:0] $end
$var wire 64 ($ full_result [63:0] $end
$var wire 64 )$ extended_b [63:0] $end
$var wire 64 *$ extended_a [63:0] $end
$var wire 32 +$ a [31:0] $end
$upscope $end
$scope module mux_ops $end
$var wire 32 ,$ in_0 [31:0] $end
$var wire 32 -$ in_1 [31:0] $end
$var wire 32 .$ in_10 [31:0] $end
$var wire 32 /$ in_11 [31:0] $end
$var wire 32 0$ in_12 [31:0] $end
$var wire 32 1$ in_13 [31:0] $end
$var wire 32 2$ in_14 [31:0] $end
$var wire 32 3$ in_15 [31:0] $end
$var wire 32 4$ in_2 [31:0] $end
$var wire 32 5$ in_3 [31:0] $end
$var wire 32 6$ in_4 [31:0] $end
$var wire 32 7$ in_6 [31:0] $end
$var wire 32 8$ in_7 [31:0] $end
$var wire 32 9$ in_8 [31:0] $end
$var wire 32 :$ in_9 [31:0] $end
$var wire 3 ;$ sel [2:0] $end
$var wire 32 <$ out [31:0] $end
$var wire 32 =$ in_5 [31:0] $end
$var wire 32 >$ imm_05 [31:0] $end
$var wire 32 ?$ imm_04 [31:0] $end
$var wire 32 @$ imm_03 [31:0] $end
$var wire 32 A$ imm_02 [31:0] $end
$var wire 32 B$ imm_01 [31:0] $end
$var wire 32 C$ imm_00 [31:0] $end
$upscope $end
$scope module srl_or_sra_circ $end
$var wire 32 D$ b [31:0] $end
$var wire 1 E$ op $end
$var wire 32 F$ srl_res [31:0] $end
$var wire 32 G$ sra_res [31:0] $end
$var wire 32 H$ out [31:0] $end
$var wire 32 I$ a [31:0] $end
$upscope $end
$upscope $end
$scope module branch_condition_checker $end
$var wire 3 J$ funct3 [2:0] $end
$var wire 1 K$ ult $end
$var wire 32 L$ rs2 [31:0] $end
$var wire 32 M$ rs1 [31:0] $end
$var wire 1 O# out $end
$var wire 1 N$ lt $end
$var wire 1 O$ eq $end
$upscope $end
$scope module core_control_unit $end
$var wire 1 O# branch_comp $end
$var wire 7 P$ opcode [6:0] $end
$var wire 1 R# regfile_write $end
$var wire 3 Q$ regfile_data_source_sel [2:0] $end
$var wire 2 R$ pc_next_address_sel [1:0] $end
$var wire 1 ^# imm_alu_sel $end
$var wire 1 _# dmem_write $end
$upscope $end
$scope module datamem_size_sel $end
$var wire 3 S$ sel [2:0] $end
$var wire 32 T$ out [31:0] $end
$var wire 16 U$ lhu [15:0] $end
$var wire 16 V$ lh [15:0] $end
$var wire 8 W$ lbu [7:0] $end
$var wire 8 X$ lb [7:0] $end
$var wire 32 Y$ dmem_out [31:0] $end
$upscope $end
$scope module dmem $end
$var wire 32 Z$ addr [31:0] $end
$var wire 1 M# clk $end
$var wire 32 [$ data [31:0] $end
$var wire 1 _# write $end
$var wire 3 \$ write_sel [2:0] $end
$var reg 32 ]$ out [31:0] $end
$var integer 32 ^$ i [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 _$ ins_out [31:0] $end
$var wire 32 `$ address [31:0] $end
$upscope $end
$scope module pc_next_address_mux $end
$var wire 32 a$ in_0 [31:0] $end
$var wire 32 b$ in_1 [31:0] $end
$var wire 32 c$ in_2 [31:0] $end
$var wire 32 d$ in_3 [31:0] $end
$var wire 2 e$ sel [1:0] $end
$var wire 32 f$ out [31:0] $end
$var wire 32 g$ imm_01 [31:0] $end
$var wire 32 h$ imm_00 [31:0] $end
$upscope $end
$scope module program_counter $end
$var wire 1 M# clk $end
$var wire 32 i$ next_address [31:0] $end
$var wire 1 N# w $end
$var reg 32 j$ out [31:0] $end
$upscope $end
$scope module regfile_data_source_mux $end
$var wire 32 k$ in_0 [31:0] $end
$var wire 32 l$ in_1 [31:0] $end
$var wire 32 m$ in_10 [31:0] $end
$var wire 32 n$ in_11 [31:0] $end
$var wire 32 o$ in_12 [31:0] $end
$var wire 32 p$ in_13 [31:0] $end
$var wire 32 q$ in_14 [31:0] $end
$var wire 32 r$ in_15 [31:0] $end
$var wire 32 s$ in_2 [31:0] $end
$var wire 32 t$ in_3 [31:0] $end
$var wire 32 u$ in_4 [31:0] $end
$var wire 32 v$ in_5 [31:0] $end
$var wire 32 w$ in_6 [31:0] $end
$var wire 32 x$ in_7 [31:0] $end
$var wire 32 y$ in_8 [31:0] $end
$var wire 32 z$ in_9 [31:0] $end
$var wire 3 {$ sel [2:0] $end
$var wire 32 |$ out [31:0] $end
$var wire 32 }$ imm_05 [31:0] $end
$var wire 32 ~$ imm_04 [31:0] $end
$var wire 32 !% imm_03 [31:0] $end
$var wire 32 "% imm_02 [31:0] $end
$var wire 32 #% imm_01 [31:0] $end
$var wire 32 $% imm_00 [31:0] $end
$upscope $end
$scope module registers $end
$var wire 5 %% addr1 [4:0] $end
$var wire 5 &% addr2 [4:0] $end
$var wire 5 '% addrWrite [4:0] $end
$var wire 1 M# clk $end
$var wire 32 (% dataWrite [31:0] $end
$var wire 1 R# write $end
$var reg 32 )% rs1 [31:0] $end
$var reg 32 *% rs2 [31:0] $end
$var integer 32 +% i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 +%
b0 *%
b0 )%
b1010 (%
b1 '%
b1010 &%
b0 %%
b1010 $%
b100 #%
b101000000000000000000000 "%
b0 !%
b1010 ~$
b101000000000000000000000 }$
b1010 |$
b0 {$
bz z$
bz y$
b0 x$
b0 w$
b0 v$
b101000000000000000000000 u$
b101000000000000000000000 t$
b100 s$
bz r$
bz q$
bz p$
bz o$
bz n$
bz m$
bx l$
b1010 k$
b0 j$
b100 i$
b100 h$
b1010 g$
b100 f$
b0 e$
b10000000000 d$
b1010 c$
b1010 b$
b100 a$
b0 `$
b101000000000000010010011 _$
b11001000 ^$
bx ]$
b0 \$
b0 [$
b1010 Z$
bx Y$
bx X$
bx W$
bx V$
bx U$
b0xxxxxxxx T$
b0 S$
b0 R$
b0 Q$
b10011 P$
1O$
0N$
b0 M$
b0 L$
0K$
b0 J$
b0 I$
b0 H$
b0 G$
b0 F$
0E$
b1010 D$
b1010 C$
b1 B$
b1010 A$
b1010 @$
b1010 ?$
b1010 >$
b0 =$
b1010 <$
b0 ;$
bz :$
bz 9$
b0 8$
b1010 7$
b1010 6$
b1 5$
b1 4$
bz 3$
bz 2$
bz 1$
bz 0$
bz /$
bz .$
b0 -$
b1010 ,$
b0 +$
b0 *$
b1010 )$
b0 ($
b0 '$
b1010 &$
b0 %$
b0 $$
b1010 #$
b0 "$
b0 !$
b1010 ~#
b0 }#
b1010 |#
b1010 {#
b11111111111111111111111111110110 z#
0y#
b1010 x#
b0 w#
b0 v#
b1010 u#
b0 t#
b0 s#
b0 r#
b1010 q#
b0 p#
b1 o#
b1 n#
b0 m#
b1010 l#
b1010 k#
b0 j#
b1010 i#
b0 h#
b1010 g#
b1010 f#
b101000000000000000000000 e#
b10000000000 d#
b1010 c#
b0 b#
b0xxxxxxxx a#
bx `#
0_#
1^#
b101000000000000010010011 ]#
b1010 \#
b1010 [#
b1010 Z#
b101000000000000000000000 Y#
b100 X#
b100 W#
b0 V#
b0 U#
b1010 T#
b0 S#
1R#
b0 Q#
b0 P#
1O#
0N#
0M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
b100 T#
b100 |$
b100 (%
b100 ~$
b100 $%
b100 f#
b100 q#
b100 <$
b100 k$
b100 >$
b100 ?$
b100 @$
b100 A$
b100 C$
b0 a#
b0 T$
b100 g$
b100 k#
b100 7$
b100 l#
b100 6$
b100 u#
b100 {#
b100 ,$
b0 V$
b0 X$
b100 [#
b100 c$
b100 c#
b100 Z$
b100 |#
b11111111111111111111111111111100 z#
b100 #$
b100 )$
b100 g#
b100 i#
b100 x#
b100 ~#
b100 &$
b100 D$
b1000 X#
b1000 f$
b1000 i$
b10000000000000000000100 }$
b10 '%
b100 &%
b100 Z#
b10000000000000000000000 Y#
b10000000000000000000000 t$
b1000 h$
b1000 #%
b10000000000000000000100 "%
b0 U$
b0 W$
b10000000000000100010011 ]#
b10000000000000100010011 _$
b1000 W#
b1000 a$
b1000 s$
b101 d#
b101 d$
b1000 \#
b1000 b$
b10000000000000000000100 e#
b10000000000000000000100 u$
b100 U#
b100 `$
b100 j$
b1010 "
b0 `#
b0 Y$
b0 ]$
b0 l$
1N#
1M#
#10
0N#
0M#
#15
b101000 t#
b101000 "$
b101000 ($
0O#
b0 m#
b0 =$
b0 H$
b100 P#
b100 L$
b100 *%
0O$
b0 G$
b0 F$
b1010 *$
b1010 $$
b10100000 p#
b10100000 -$
b1010 Q#
b1010 v#
b1010 }#
b1010 %$
b1010 +$
b1010 I$
b1010 M$
b1010 )%
b1110 T#
b1110 |$
b1110 (%
b1110 ~$
b1110 $%
b0 B$
b1110 f#
b1110 q#
b1110 <$
b1110 k$
b0 o#
b0 4$
b0 n#
b0 5$
b1110 >$
b1110 ?$
b1110 @$
b1110 A$
b1110 C$
0^#
b1100 g$
b1110 k#
b1110 7$
b1110 l#
b1110 6$
b1110 u#
b1110 {#
b1110 ,$
b1100 [#
b1100 c$
b1100 c#
b1100 Z$
b1110 |#
b110 z#
b100 #$
b100 )$
b100 g#
b100 i#
b100 x#
b100 ~#
b100 &$
b100 D$
b1100 X#
b1100 f$
b1100 i$
b1000001000000000001000 }$
b110011 P$
b1 '%
b1 %%
b10 &%
b1100 Z#
b1000001000000000000000 Y#
b1000001000000000000000 t$
b1100 h$
b1100 #%
b1000001000000000001000 "%
b100 #
b1000001000000010110011 ]#
b1000001000000010110011 _$
b1100 W#
b1100 a$
b1100 s$
b10000001000 d#
b10000001000 d$
b1000000000001010 \#
b1000000000001010 b$
b1000001000000000001000 e#
b1000001000000000001000 u$
b1000 U#
b1000 `$
b1000 j$
1N#
1M#
#20
0N#
0M#
#25
b10010 C$
b1010 A$
b10000 g$
b10010 u#
b10010 {#
b10010 ,$
b1010 l#
b1010 6$
b100 h#
b100 8$
b10000 [#
b10000 c$
b111000 ($
b1110 *$
b111000 "$
b1110 $$
b1010 z#
b10010 |#
b111000 t#
b11100000 p#
b11100000 -$
b10000 Z#
b1110 Q#
b1110 v#
b1110 }#
b1110 %$
b1110 +$
b1110 I$
b1110 M$
b1110 )%
b0 T#
b0 |$
b0 (%
b0 ~$
b0 $%
b0 f#
b0 q#
b0 <$
b0 k$
b0 ?$
1_#
0R#
b1110 c#
b1110 Z$
b100 b#
b100 [$
b10 ;$
b10000 X#
b10000 f$
b10000 i$
b1000001010000000001100 }$
b0 '%
b100011 P$
b10 S$
b10 \$
b10 j#
b10 J$
b1000001010000000000000 Y#
b1000001010000000000000 t$
b10000 h$
b10000 #%
b1000001010000000001100 "%
b1000001010000000100011 ]#
b1000001010000000100011 _$
b10000 W#
b10000 a$
b10000 s$
b1100 d#
b1100 d$
b1010000000001110 \#
b1010000000001110 b$
b1000001010000000001100 e#
b1000001010000000001100 u$
b1100 U#
b1100 `$
b1100 j$
b1110 "
1N#
1M#
#30
0N#
0M#
#35
bx P#
bx L$
bx *%
xK$
xO$
xN$
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *$
bx $$
bx Q#
bx v#
bx }#
bx %$
bx +$
bx I$
bx M$
bx )%
b0x B$
bx s#
bx !$
bx r#
bx '$
bx ~$
bx T#
bx |$
bx (%
bx h#
bx 8$
bx k#
bx 7$
bx l#
bx 6$
b0x o#
b0x 4$
b0x n#
b0x 5$
bx m#
bx =$
bx H$
bx $%
bx p#
bx -$
bx t#
bx |#
bx z#
bx "$
bx #$
bx ($
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )$
bx F$
bx G$
bx g#
bx i#
bx x#
bx ~#
bx &$
bx D$
bx A$
bx @$
bx ?$
bx >$
bx f#
bx q#
bx <$
bx k$
bx C$
bx V#
bx R$
bx e$
bx S#
bx Q$
bx {$
x^#
x_#
xR#
bx u#
bx {#
bx ,$
bx g$
bx b#
bx [$
bx ;$
xO#
xy#
xE$
bx0 [#
bx0 c$
bx c#
bx Z$
bx X#
bx f$
bx i$
bx }$
bx P$
bx S$
bx \$
bx '%
bx J$
bx %%
bx j#
bx &%
bx Z#
bx000000000000 Y#
bx000000000000 t$
bx h$
bx0000000x0x00 #%
bx "%
b0 R
b0 Q
b0 P
b100 O
bx ]#
bx _$
b10100 W#
b10100 a$
b10100 s$
bx d#
bx d$
bx \#
bx b$
bx e#
bx u$
b10000 U#
b10000 `$
b10000 j$
1N#
1M#
#40
0N#
0M#
#45
bx a#
bx T$
bx V$
bx X$
bx #%
bx U$
bx W$
bx W#
bx a$
bx s$
bx U#
bx `$
bx j$
bx `#
bx Y$
bx ]$
bx l$
1N#
1M#
#50
0N#
0M#
#55
1N#
1M#
#60
0N#
0M#
#65
1N#
1M#
#70
0N#
0M#
#75
1N#
1M#
#80
0N#
0M#
#85
1N#
1M#
#90
0N#
0M#
#95
1N#
1M#
#100
0N#
0M#
