$date
	Fri Jan 21 10:09:09 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ! \registers[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 " \registers[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 # \registers[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 $ \registers[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 % \registers[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 & \registers[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ' \registers[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ( \registers[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ) \registers[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 * \registers[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 + \registers[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 , \registers[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 - \registers[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 . \registers[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 / \registers[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 0 \registers[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 1 \registers[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 2 \registers[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 3 \registers[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 4 \registers[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 5 \registers[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 6 \registers[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 7 \registers[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 8 \registers[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 9 \registers[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 : \registers[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ; \registers[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 < \registers[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 = \registers[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 > \registers[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 ? \registers[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module registers $end
$var reg 32 @ \registers[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A \memory[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B \memory[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C \memory[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D \memory[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E \memory[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F \memory[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G \memory[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H \memory[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I \memory[8] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J \memory[9] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K \memory[10] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L \memory[11] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 M \memory[12] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 N \memory[13] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 O \memory[14] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 P \memory[15] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Q \memory[16] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 R \memory[17] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 S \memory[18] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 T \memory[19] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 U \memory[20] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 V \memory[21] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 W \memory[22] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 X \memory[23] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Y \memory[24] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Z \memory[25] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 [ \memory[26] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 \ \memory[27] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ] \memory[28] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ^ \memory[29] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 _ \memory[30] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ` \memory[31] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 a \memory[32] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 b \memory[33] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 c \memory[34] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 d \memory[35] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 e \memory[36] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 f \memory[37] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 g \memory[38] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 h \memory[39] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 i \memory[40] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 j \memory[41] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 k \memory[42] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 l \memory[43] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 m \memory[44] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 n \memory[45] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 o \memory[46] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 p \memory[47] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 q \memory[48] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 r \memory[49] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 s \memory[50] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 t \memory[51] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 u \memory[52] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 v \memory[53] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 w \memory[54] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 x \memory[55] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 y \memory[56] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 z \memory[57] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 { \memory[58] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 | \memory[59] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 } \memory[60] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ~ \memory[61] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 !" \memory[62] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 "" \memory[63] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 #" \memory[64] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 $" \memory[65] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 %" \memory[66] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 &" \memory[67] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 '" \memory[68] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 (" \memory[69] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 )" \memory[70] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 *" \memory[71] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 +" \memory[72] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ," \memory[73] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 -" \memory[74] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ." \memory[75] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 /" \memory[76] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 0" \memory[77] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 1" \memory[78] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 2" \memory[79] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 3" \memory[80] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 4" \memory[81] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 5" \memory[82] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 6" \memory[83] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 7" \memory[84] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 8" \memory[85] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 9" \memory[86] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 :" \memory[87] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ;" \memory[88] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 <" \memory[89] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 =" \memory[90] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 >" \memory[91] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ?" \memory[92] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 @" \memory[93] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A" \memory[94] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B" \memory[95] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C" \memory[96] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D" \memory[97] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E" \memory[98] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F" \memory[99] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G" \memory[100] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H" \memory[101] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I" \memory[102] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J" \memory[103] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K" \memory[104] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L" \memory[105] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 M" \memory[106] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 N" \memory[107] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 O" \memory[108] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 P" \memory[109] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Q" \memory[110] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 R" \memory[111] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 S" \memory[112] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 T" \memory[113] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 U" \memory[114] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 V" \memory[115] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 W" \memory[116] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 X" \memory[117] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Y" \memory[118] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 Z" \memory[119] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 [" \memory[120] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 \" \memory[121] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ]" \memory[122] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ^" \memory[123] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 _" \memory[124] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 `" \memory[125] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 a" \memory[126] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 b" \memory[127] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 c" \memory[128] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 d" \memory[129] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 e" \memory[130] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 f" \memory[131] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 g" \memory[132] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 h" \memory[133] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 i" \memory[134] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 j" \memory[135] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 k" \memory[136] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 l" \memory[137] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 m" \memory[138] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 n" \memory[139] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 o" \memory[140] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 p" \memory[141] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 q" \memory[142] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 r" \memory[143] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 s" \memory[144] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 t" \memory[145] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 u" \memory[146] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 v" \memory[147] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 w" \memory[148] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 x" \memory[149] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 y" \memory[150] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 z" \memory[151] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 {" \memory[152] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 |" \memory[153] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 }" \memory[154] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ~" \memory[155] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 !# \memory[156] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 "# \memory[157] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ## \memory[158] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 $# \memory[159] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 %# \memory[160] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 &# \memory[161] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 '# \memory[162] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 (# \memory[163] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 )# \memory[164] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 *# \memory[165] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 +# \memory[166] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ,# \memory[167] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 -# \memory[168] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 .# \memory[169] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 /# \memory[170] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 0# \memory[171] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 1# \memory[172] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 2# \memory[173] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 3# \memory[174] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 4# \memory[175] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 5# \memory[176] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 6# \memory[177] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 7# \memory[178] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 8# \memory[179] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 9# \memory[180] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 :# \memory[181] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ;# \memory[182] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 <# \memory[183] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 =# \memory[184] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ># \memory[185] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 ?# \memory[186] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 @# \memory[187] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 A# \memory[188] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 B# \memory[189] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 C# \memory[190] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 D# \memory[191] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 E# \memory[192] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 F# \memory[193] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 G# \memory[194] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 H# \memory[195] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 I# \memory[196] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 J# \memory[197] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 K# \memory[198] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$scope module c $end
$scope module dmem $end
$var reg 8 L# \memory[199] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module core_tb $end
$var reg 1 M# clk $end
$scope module c $end
$var wire 1 M# clk $end
$var wire 32 N# dmem_data [31:0] $end
$var wire 1 O# pc_write $end
$var wire 1 P# should_branch $end
$var wire 32 Q# rs2_3 [31:0] $end
$var wire 32 R# rs2_2 [31:0] $end
$var wire 32 S# rs2_1 [31:0] $end
$var wire 32 T# rs1_3 [31:0] $end
$var wire 32 U# rs1_2 [31:0] $end
$var wire 32 V# rs1_1 [31:0] $end
$var wire 1 W# regfile_write $end
$var wire 3 X# regfile_data_source_sel [2:0] $end
$var wire 32 Y# regfile_data [31:0] $end
$var wire 32 Z# pc_out4 [31:0] $end
$var wire 32 [# pc_out3 [31:0] $end
$var wire 32 \# pc_out2 [31:0] $end
$var wire 32 ]# pc_out1 [31:0] $end
$var wire 32 ^# pc_out [31:0] $end
$var wire 2 _# pc_next_sel [1:0] $end
$var wire 32 `# pc_next_line [31:0] $end
$var wire 32 a# pc_next [31:0] $end
$var wire 32 b# lui_val4 [31:0] $end
$var wire 32 c# jalr_address_calc_last_bit_not_set [31:0] $end
$var wire 32 d# jalr_address_calc [31:0] $end
$var wire 32 e# jal_address_calc [31:0] $end
$var wire 32 f# ins4 [31:0] $end
$var wire 32 g# ins3 [31:0] $end
$var wire 32 h# ins2 [31:0] $end
$var wire 32 i# ins1 [31:0] $end
$var wire 32 j# ins [31:0] $end
$var wire 1 k# dmem_write $end
$var wire 32 l# dmem_out4 [31:0] $end
$var wire 32 m# dmem_out [31:0] $end
$var wire 32 n# dmem_data_size_out [31:0] $end
$var wire 32 o# dmem_address_calc [31:0] $end
$var wire 32 p# branch_addr [31:0] $end
$var wire 32 q# auipc_val4 [31:0] $end
$var wire 32 r# alu_rs2_in [31:0] $end
$var wire 32 s# alu_rs1_in [31:0] $end
$var wire 32 t# alu_out4 [31:0] $end
$var wire 32 u# alu_out3 [31:0] $end
$var wire 32 v# alu_out [31:0] $end
$var wire 2 w# alu_forward_sel_rs2 [1:0] $end
$var wire 2 x# alu_forward_sel_rs1 [1:0] $end
$scope module alu_rs1_forward_mux $end
$var wire 32 y# in_3 [31:0] $end
$var wire 2 z# sel [1:0] $end
$var wire 32 {# out [31:0] $end
$var wire 32 |# in_2 [31:0] $end
$var wire 32 }# in_1 [31:0] $end
$var wire 32 ~# in_0 [31:0] $end
$var wire 32 !$ imm_01 [31:0] $end
$var wire 32 "$ imm_00 [31:0] $end
$upscope $end
$scope module alu_rs2_forward_mux $end
$var wire 32 #$ in_1 [31:0] $end
$var wire 2 $$ sel [1:0] $end
$var wire 32 %$ out [31:0] $end
$var wire 32 &$ in_3 [31:0] $end
$var wire 32 '$ in_2 [31:0] $end
$var wire 32 ($ in_0 [31:0] $end
$var wire 32 )$ imm_01 [31:0] $end
$var wire 32 *$ imm_00 [31:0] $end
$upscope $end
$scope module alunit $end
$var wire 32 +$ a [31:0] $end
$var wire 32 ,$ and_res [31:0] $end
$var wire 32 -$ b [31:0] $end
$var wire 10 .$ op [9:0] $end
$var wire 32 /$ or_res [31:0] $end
$var wire 32 0$ xor_res [31:0] $end
$var wire 32 1$ srl_or_sra_res [31:0] $end
$var wire 32 2$ sltu_res [31:0] $end
$var wire 32 3$ slt_res [31:0] $end
$var wire 32 4$ sll_res [31:0] $end
$var wire 32 5$ out [31:0] $end
$var wire 32 6$ mulhu_res [31:0] $end
$var wire 32 7$ mulh_res [31:0] $end
$var wire 32 8$ mul_res [31:0] $end
$var wire 32 9$ add_or_sub_res [31:0] $end
$var reg 32 :$ zero [31:0] $end
$scope module add_or_sub_circ $end
$var wire 32 ;$ a [31:0] $end
$var wire 32 <$ b [31:0] $end
$var wire 1 =$ op $end
$var wire 32 >$ sub_res [31:0] $end
$var wire 32 ?$ out [31:0] $end
$var wire 32 @$ adder_res [31:0] $end
$upscope $end
$scope module mulh_circ $end
$var wire 32 A$ a [31:0] $end
$var wire 32 B$ b [31:0] $end
$var wire 32 C$ out [31:0] $end
$var wire 64 D$ full_result [63:0] $end
$var wire 64 E$ extended_b [63:0] $end
$var wire 64 F$ extended_a [63:0] $end
$upscope $end
$scope module mulhu_circ $end
$var wire 32 G$ a [31:0] $end
$var wire 32 H$ b [31:0] $end
$var wire 32 I$ out [31:0] $end
$var wire 64 J$ full_result [63:0] $end
$var wire 64 K$ extended_b [63:0] $end
$var wire 64 L$ extended_a [63:0] $end
$upscope $end
$scope module mux_ops $end
$var wire 32 M$ in_0 [31:0] $end
$var wire 32 N$ in_1 [31:0] $end
$var wire 32 O$ in_10 [31:0] $end
$var wire 32 P$ in_11 [31:0] $end
$var wire 32 Q$ in_12 [31:0] $end
$var wire 32 R$ in_13 [31:0] $end
$var wire 32 S$ in_14 [31:0] $end
$var wire 32 T$ in_15 [31:0] $end
$var wire 32 U$ in_2 [31:0] $end
$var wire 32 V$ in_3 [31:0] $end
$var wire 32 W$ in_4 [31:0] $end
$var wire 32 X$ in_6 [31:0] $end
$var wire 32 Y$ in_7 [31:0] $end
$var wire 32 Z$ in_8 [31:0] $end
$var wire 32 [$ in_9 [31:0] $end
$var wire 3 \$ sel [2:0] $end
$var wire 32 ]$ out [31:0] $end
$var wire 32 ^$ in_5 [31:0] $end
$var wire 32 _$ imm_05 [31:0] $end
$var wire 32 `$ imm_04 [31:0] $end
$var wire 32 a$ imm_03 [31:0] $end
$var wire 32 b$ imm_02 [31:0] $end
$var wire 32 c$ imm_01 [31:0] $end
$var wire 32 d$ imm_00 [31:0] $end
$upscope $end
$scope module srl_or_sra_circ $end
$var wire 32 e$ a [31:0] $end
$var wire 32 f$ b [31:0] $end
$var wire 1 g$ op $end
$var wire 32 h$ srl_res [31:0] $end
$var wire 32 i$ sra_res [31:0] $end
$var wire 32 j$ out [31:0] $end
$upscope $end
$upscope $end
$scope module branch_condition_checker $end
$var wire 3 k$ funct3 [2:0] $end
$var wire 1 l$ ult $end
$var wire 32 m$ rs2 [31:0] $end
$var wire 32 n$ rs1 [31:0] $end
$var wire 1 P# out $end
$var wire 1 o$ lt $end
$var wire 1 p$ eq $end
$upscope $end
$scope module core_control_unit $end
$var wire 1 P# branch_comp $end
$var wire 5 q$ ins2_rs1 [4:0] $end
$var wire 5 r$ ins2_rs2 [4:0] $end
$var wire 5 s$ ins3_rd [4:0] $end
$var wire 5 t$ ins4_rd [4:0] $end
$var wire 7 u$ opcode [6:0] $end
$var wire 7 v$ opcode1 [6:0] $end
$var wire 7 w$ opcode2 [6:0] $end
$var wire 7 x$ opcode3 [6:0] $end
$var wire 7 y$ opcode4 [6:0] $end
$var wire 1 W# regfile_write $end
$var wire 3 z$ regfile_data_source_sel [2:0] $end
$var wire 2 {$ pc_next_address_sel [1:0] $end
$var wire 1 k# dmem_write $end
$var wire 2 |$ alu_forward_sel_rs2 [1:0] $end
$var wire 2 }$ alu_forward_sel_rs1 [1:0] $end
$upscope $end
$scope module datamem_size_sel $end
$var wire 3 ~$ sel [2:0] $end
$var wire 32 !% out [31:0] $end
$var wire 16 "% lhu [15:0] $end
$var wire 16 #% lh [15:0] $end
$var wire 8 $% lbu [7:0] $end
$var wire 8 %% lb [7:0] $end
$var wire 32 &% dmem_out [31:0] $end
$upscope $end
$scope module dmem $end
$var wire 32 '% addr [31:0] $end
$var wire 1 M# clk $end
$var wire 32 (% data [31:0] $end
$var wire 1 k# write $end
$var wire 3 )% write_sel [2:0] $end
$var reg 32 *% out [31:0] $end
$var integer 32 +% i [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 ,% ins_out [31:0] $end
$var wire 32 -% address [31:0] $end
$upscope $end
$scope module pc_next_address_mux $end
$var wire 32 .% in_0 [31:0] $end
$var wire 32 /% in_1 [31:0] $end
$var wire 32 0% in_2 [31:0] $end
$var wire 32 1% in_3 [31:0] $end
$var wire 2 2% sel [1:0] $end
$var wire 32 3% out [31:0] $end
$var wire 32 4% imm_01 [31:0] $end
$var wire 32 5% imm_00 [31:0] $end
$upscope $end
$scope module program_counter $end
$var wire 1 M# clk $end
$var wire 32 6% next_address [31:0] $end
$var wire 1 O# w $end
$var reg 32 7% out [31:0] $end
$upscope $end
$scope module reg_alu_out3 $end
$var wire 1 M# clk $end
$var wire 32 8% in [31:0] $end
$var reg 32 9% out [31:0] $end
$upscope $end
$scope module reg_alu_out4 $end
$var wire 1 M# clk $end
$var wire 32 :% in [31:0] $end
$var reg 32 ;% out [31:0] $end
$upscope $end
$scope module reg_dmem_out4 $end
$var wire 1 M# clk $end
$var wire 32 <% in [31:0] $end
$var reg 32 =% out [31:0] $end
$upscope $end
$scope module reg_ins1 $end
$var wire 1 M# clk $end
$var wire 32 >% in [31:0] $end
$var reg 32 ?% out [31:0] $end
$upscope $end
$scope module reg_ins2 $end
$var wire 1 M# clk $end
$var wire 32 @% in [31:0] $end
$var reg 32 A% out [31:0] $end
$upscope $end
$scope module reg_ins3 $end
$var wire 1 M# clk $end
$var wire 32 B% in [31:0] $end
$var reg 32 C% out [31:0] $end
$upscope $end
$scope module reg_ins4 $end
$var wire 1 M# clk $end
$var wire 32 D% in [31:0] $end
$var reg 32 E% out [31:0] $end
$upscope $end
$scope module reg_pc_out1 $end
$var wire 1 M# clk $end
$var wire 32 F% in [31:0] $end
$var reg 32 G% out [31:0] $end
$upscope $end
$scope module reg_pc_out2 $end
$var wire 1 M# clk $end
$var wire 32 H% in [31:0] $end
$var reg 32 I% out [31:0] $end
$upscope $end
$scope module reg_pc_out3 $end
$var wire 1 M# clk $end
$var wire 32 J% in [31:0] $end
$var reg 32 K% out [31:0] $end
$upscope $end
$scope module reg_pc_out4 $end
$var wire 1 M# clk $end
$var wire 32 L% in [31:0] $end
$var reg 32 M% out [31:0] $end
$upscope $end
$scope module reg_rs1_2 $end
$var wire 1 M# clk $end
$var wire 32 N% in [31:0] $end
$var reg 32 O% out [31:0] $end
$upscope $end
$scope module reg_rs1_3 $end
$var wire 1 M# clk $end
$var wire 32 P% in [31:0] $end
$var reg 32 Q% out [31:0] $end
$upscope $end
$scope module reg_rs2_2 $end
$var wire 1 M# clk $end
$var wire 32 R% in [31:0] $end
$var reg 32 S% out [31:0] $end
$upscope $end
$scope module reg_rs2_3 $end
$var wire 1 M# clk $end
$var wire 32 T% in [31:0] $end
$var reg 32 U% out [31:0] $end
$upscope $end
$scope module regfile_data_source_mux $end
$var wire 32 V% in_0 [31:0] $end
$var wire 32 W% in_1 [31:0] $end
$var wire 32 X% in_10 [31:0] $end
$var wire 32 Y% in_11 [31:0] $end
$var wire 32 Z% in_12 [31:0] $end
$var wire 32 [% in_13 [31:0] $end
$var wire 32 \% in_14 [31:0] $end
$var wire 32 ]% in_15 [31:0] $end
$var wire 32 ^% in_2 [31:0] $end
$var wire 32 _% in_3 [31:0] $end
$var wire 32 `% in_4 [31:0] $end
$var wire 32 a% in_5 [31:0] $end
$var wire 32 b% in_6 [31:0] $end
$var wire 32 c% in_7 [31:0] $end
$var wire 32 d% in_8 [31:0] $end
$var wire 32 e% in_9 [31:0] $end
$var wire 3 f% sel [2:0] $end
$var wire 32 g% out [31:0] $end
$var wire 32 h% imm_05 [31:0] $end
$var wire 32 i% imm_04 [31:0] $end
$var wire 32 j% imm_03 [31:0] $end
$var wire 32 k% imm_02 [31:0] $end
$var wire 32 l% imm_01 [31:0] $end
$var wire 32 m% imm_00 [31:0] $end
$upscope $end
$scope module registers $end
$var wire 5 n% addr1 [4:0] $end
$var wire 5 o% addr2 [4:0] $end
$var wire 5 p% addrWrite [4:0] $end
$var wire 1 M# clk $end
$var wire 32 q% dataWrite [31:0] $end
$var wire 1 W# write $end
$var reg 32 r% rs1 [31:0] $end
$var reg 32 s% rs2 [31:0] $end
$var integer 32 t% i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 t%
b0 s%
b0 r%
b0 q%
b0 p%
b0 o%
b0 n%
b0 m%
b0 l%
b0 k%
b0 j%
b0 i%
b0 h%
b0 g%
b0 f%
bz e%
bz d%
b0 c%
b0 b%
b0 a%
b0 `%
b0 _%
b0 ^%
bz ]%
bz \%
bz [%
bz Z%
bz Y%
bz X%
b0 W%
b0 V%
b0 U%
b0 T%
b0 S%
b0 R%
b0 Q%
b0 P%
b0 O%
b0 N%
b0 M%
b0 L%
b0 K%
b0 J%
b0 I%
b0 H%
b0 G%
b0 F%
b0 E%
b0 D%
b0 C%
b0 B%
b0 A%
b0 @%
b0 ?%
b11011100000000000010010011 >%
b0 =%
bx <%
b0 ;%
b0 :%
b0 9%
b0 8%
b0 7%
b100 6%
b100 5%
b0 4%
b100 3%
b0 2%
b0 1%
b0 0%
b0 /%
b100 .%
b0 -%
b11011100000000000010010011 ,%
b11001000 +%
bx *%
b0 )%
b0 (%
b0 '%
bx &%
bx %%
bx $%
bx #%
bx "%
b0xxxxxxxx !%
b0 ~$
b1 }$
b10 |$
b0 {$
b0 z$
b0 y$
b0 x$
b0 w$
b0 v$
b10011 u$
b0 t$
b0 s$
b0 r$
b0 q$
1p$
0o$
b0 n$
b0 m$
0l$
b0 k$
b0 j$
b0 i$
b0 h$
0g$
b0 f$
b0 e$
b0 d$
b0 c$
b0 b$
b0 a$
b0 `$
b0 _$
b0 ^$
b0 ]$
b0 \$
bz [$
bz Z$
b0 Y$
b0 X$
b0 W$
b0 V$
b0 U$
bz T$
bz S$
bz R$
bz Q$
bz P$
bz O$
b0 N$
b0 M$
b0 L$
b0 K$
b0 J$
b0 I$
b0 H$
b0 G$
b0 F$
b0 E$
b0 D$
b0 C$
b0 B$
b0 A$
b0 @$
b0 ?$
b0 >$
0=$
b0 <$
b0 ;$
b0 :$
b0 9$
b0 8$
b0 7$
b0 6$
b0 5$
b0 4$
b0 3$
b0 2$
b0 1$
b0 0$
b0 /$
b0 .$
b0 -$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 ($
b0 '$
b0 &$
b0 %$
b10 $$
b0 #$
b0 "$
b0 !$
b0 ~#
b0 }#
b0 |#
b0 {#
b1 z#
b0 y#
b1 x#
b10 w#
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
b0 o#
b0xxxxxxxx n#
bx m#
b0 l#
0k#
b11011100000000000010010011 j#
b0 i#
b0 h#
b0 g#
b0 f#
b0 e#
b0 d#
b0 c#
b0 b#
b100 a#
b100 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
b0 [#
b0 Z#
b0 Y#
b0 X#
0W#
b0 V#
b0 U#
b0 T#
b0 S#
b0 R#
b0 Q#
1P#
0O#
b0 N#
0M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
b0 n#
b0 !%
b0 #%
b0 %%
b1000 a#
b1000 3%
b1000 6%
b1000 5%
b0 "%
b0 $%
b10111 o%
b10011 v$
b10000001000000100010011 j#
b10000001000000100010011 ,%
b10000001000000100010011 >%
b1000 `#
b1000 .%
b100 ^#
b100 -%
b100 7%
b100 F%
b0 m#
b0 &%
b0 *%
b0 <%
b11011100000000000010010011 i#
b11011100000000000010010011 ?%
b11011100000000000010010011 @%
bx l#
bx =%
bx W%
1O#
1M#
#10
0O#
0M#
#15
b110111 v#
b110111 5$
b110111 ]$
b110111 8%
b110111 _$
b110111 `$
b110111 a$
b110111 b$
b1 c$
b110111 d$
b110111 /$
b110111 X$
b110111 0$
b110111 W$
b1 3$
b1 U$
b1 2$
b1 V$
b110111 9$
b110111 ?$
b110111 M$
b110111 @$
b11111111111111111111111111001001 >$
b110111 E$
b110111 K$
b110111 r#
b110111 %$
b110111 -$
b110111 <$
b110111 B$
b110111 H$
b110111 f$
b110111 *$
b1 w#
b1 $$
b1 |$
b110110 4%
b110110 d#
b110110 0%
b1100 a#
b1100 3%
b1100 6%
b1000 .$
b10111 r$
b10011 w$
b110111 #$
b10000010000 p#
b10000010000 1%
b110111 c#
b100000110110 e#
b100000110110 /%
b100 o%
b1 n%
b110011 u$
b1100 5%
b0 l#
b0 =%
b0 W%
b11011100000000000010010011 h#
b11011100000000000010010011 A%
b11011100000000000010010011 B%
b10000001000000100010011 i#
b10000001000000100010011 ?%
b10000001000000100010011 @%
b100 ]#
b100 G%
b100 H%
b100010000000110110011 j#
b100010000000110110011 ,%
b100010000000110110011 >%
b1100 `#
b1100 .%
b1000 ^#
b1000 -%
b1000 7%
b1000 F%
1O#
1M#
#20
0O#
0M#
#25
b111011 v#
b111011 5$
b111011 ]$
b111011 8%
b110011 _$
b111011 `$
b11 1$
b11 ^$
b11 j$
b110011 b$
b0 c$
b111011 d$
b1101110000 4$
b1101110000 N$
b100 E$
b100 K$
b11 h$
b11 i$
b100 r#
b100 %$
b100 -$
b100 <$
b100 B$
b100 H$
b100 f$
b100 4%
b100 ,$
b100 Y$
b110011 0$
b110011 W$
b0 3$
b0 U$
b0 2$
b0 V$
b111011 9$
b111011 ?$
b111011 M$
b10000 a#
b10000 3%
b10000 6%
b100 *$
b100 d#
b100 0%
b110111 o#
b110111 '%
b11011100 8$
b111011 @$
b110011 >$
b11011100 D$
b110111 F$
b11011100 J$
b110111 L$
b110111 s#
b110111 {#
b110111 +$
b110111 ;$
b110111 A$
b110111 G$
b110111 e$
bx u$
b10000 5%
b1 o%
b10 n%
b110011 v$
b0 .$
b100 r$
b1 q$
b100 #$
b100 c#
b1 s$
b10011 x$
b110111 "$
bx j#
bx ,%
bx >%
b10000 `#
b10000 .%
b1100 ^#
b1100 -%
b1100 7%
b1100 F%
b1000 ]#
b1000 G%
b1000 H%
b101 p#
b101 1%
b1000000000001000 e#
b1000000000001000 /%
b100 \#
b100 I%
b100 J%
b100010000000110110011 i#
b100010000000110110011 ?%
b100010000000110110011 @%
b10000001000000100010011 h#
b10000001000000100010011 A%
b10000001000000100010011 B%
b11011100000000000010010011 g#
b11011100000000000010010011 C%
b11011100000000000010010011 D%
b110111 u#
b110111 }#
b110111 '$
b110111 9%
b110111 :%
1O#
1M#
#30
0O#
0M#
#35
bx S#
bx R%
bx s%
bx V#
bx N%
bx r%
b1110010 v#
b1110010 5$
b1110010 ]$
b1110010 8%
b1100 _$
b1110010 `$
b111111 a$
b1100 b$
b1110010 d$
1W#
b0 1$
b0 ^$
b0 j$
b110111 Y#
b110111 g%
b110111 q%
b110011 ,$
b110011 Y$
b111111 /$
b111111 X$
b1100 0$
b1100 W$
b1110010 9$
b1110010 ?$
b1110010 M$
b11011100000000000000000000 h%
b11 w#
b11 $$
b11 |$
b110111 E$
b110111 K$
b0 h$
b0 i$
b110111 r#
b110111 %$
b110111 -$
b110111 <$
b110111 B$
b110111 H$
b110111 f$
b0 4%
b110111 i%
b0 4$
b0 N$
b110010101101 8$
b1110010 @$
b100 >$
b110010101101 D$
b111011 F$
b110010101101 J$
b111011 L$
b111011 s#
b111011 {#
b111011 +$
b111011 ;$
b111011 A$
b111011 G$
b111011 e$
b11011100000000000000000000 k%
b100 o#
b100 '%
b1 *$
b0 d#
b0 0%
b10100 a#
b10100 3%
b10100 6%
b110111 m%
b110111 )$
b111011 "$
b1 p%
b1 t$
b10011 y$
b11011100000000000000000000 q#
b11011100000000000000000000 `%
b11011100000000000000000000 b#
b11011100000000000000000000 _%
b10 s$
b1 r$
b10 q$
b110011 w$
b1 #$
b1 c#
bx o%
bx n%
bx v$
b10100 5%
b110111 t#
b110111 |#
b110111 &$
b110111 ;%
b110111 V%
b111011 u#
b111011 }#
b111011 '$
b111011 9%
b111011 :%
b11011100000000000010010011 f#
b11011100000000000010010011 E%
b10000001000000100010011 g#
b10000001000000100010011 C%
b10000001000000100010011 D%
b100010000000110110011 h#
b100010000000110110011 A%
b100010000000110110011 B%
bx i#
bx ?%
bx @%
b100 [#
b100 K%
b100 L%
b10000001001 p#
b10000001001 1%
b10000100000001000 e#
b10000100000001000 /%
b1000 \#
b1000 I%
b1000 J%
b1100 ]#
b1100 G%
b1100 H%
b10100 `#
b10100 .%
b10000 ^#
b10000 -%
b10000 7%
b10000 F%
1O#
1M#
#40
0O#
0M#
#45
b0x c$
bx 7$
bx C$
bx 6$
bx I$
bx 1$
bx ^$
bx j$
b0x 3$
b0x U$
b0x 2$
b0x V$
bx 4$
bx N$
bx h$
bx i$
b0xxx0xx !$
bx `$
bx _$
bx v#
bx 5$
bx ]$
bx 8%
bx a$
bx b$
bx d$
bx _#
bx {$
bx 2%
bx w#
bx $$
bx |$
bx x#
bx z#
bx }$
b111011 Y#
b111011 g%
b111011 q%
bx ,$
bx Y$
bx /$
bx X$
bx 0$
bx W$
bx 9$
bx ?$
bx M$
bx a#
bx 3%
bx 6%
b10000001000000000000100 h%
bx \$
x=$
xg$
bx *$
b1 o#
b1 '%
bx 4%
bx F$
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx L$
bx s#
bx {#
bx +$
bx ;$
bx A$
bx G$
bx e$
b111011 i%
bx 8$
bx @$
bx >$
bx D$
bx E$
bx J$
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx K$
bx r#
bx %$
bx -$
bx <$
bx B$
bx H$
bx f$
bx 5%
b100 l%
b10000001000000000000100 k%
bx .$
bx r$
bx q$
bx w$
bx k$
b0xxxxxxxxxxxx #$
b11 s$
b110011 x$
b10 p%
b10 t$
b10000001000000000000000 b#
b10000001000000000000000 _%
bx0 d#
bx0 0%
xP#
bx "$
b111011 m%
b0x11x01x )$
b11000 `#
b11000 .%
b10100 ^#
b10100 -%
b10100 7%
b10100 F%
b110111 "
b10000 ]#
b10000 G%
b10000 H%
bx p#
bx 1%
bx e#
bx /%
b1100 \#
b1100 I%
b1100 J%
b1000 [#
b1000 K%
b1000 L%
b10000001000000000000100 q#
b10000001000000000000100 `%
b100 Z#
b100 M%
b100 ^%
bx h#
bx A%
bx B%
b100010000000110110011 g#
b100010000000110110011 C%
b100010000000110110011 D%
b10000001000000100010011 f#
b10000001000000100010011 E%
bx c#
bx U#
bx ~#
bx n$
bx O%
bx P%
xl$
xp$
xo$
bx R#
bx ($
bx m$
bx S%
bx T%
b1110010 u#
b1110010 }#
b1110010 '$
b1110010 9%
b1110010 :%
b111011 t#
b111011 |#
b111011 &$
b111011 ;%
b111011 V%
1O#
1M#
#50
0O#
0M#
#55
b1110010 Y#
b1110010 g%
b1110010 q%
xk#
b1110010 i%
b100010000000000001000 h%
b1110010 m%
b0xxx00x0 !$
bx )$
bx o#
bx '%
b11 p%
b11 t$
b110011 y$
b100010000000000000000 b#
b100010000000000000000 _%
bx ~$
bx )%
bx s$
bx x$
b1000 l%
b100010000000000001000 k%
b1110010 t#
b1110010 |#
b1110010 &$
b1110010 ;%
b1110010 V%
bx u#
bx }#
bx '$
bx 9%
bx :%
bx N#
bx (%
bx Q#
bx U%
bx T#
bx Q%
b100010000000110110011 f#
b100010000000110110011 E%
bx g#
bx C%
bx D%
b100010000000000001000 q#
b100010000000000001000 `%
b1000 Z#
b1000 M%
b1000 ^%
b1100 [#
b1100 K%
b1100 L%
b10000 \#
b10000 I%
b10000 J%
b10100 ]#
b10100 G%
b10100 H%
b111011 #
bx `#
bx .%
bx ^#
bx -%
bx 7%
bx F%
1O#
1M#
#60
0O#
0M#
#65
bx n#
bx !%
bx #%
bx %%
bx X#
bx z$
bx f%
xW#
bx Y#
bx g%
bx q%
bx h%
bx i%
bx "%
bx $%
bx00000000xx00 l%
bx k%
bx p%
bx t$
bx y$
bx000000000000 b#
bx000000000000 _%
bx m%
bx !$
b1110010 $
bx m#
bx &%
bx *%
bx <%
bx ]#
bx G%
bx H%
b10100 \#
b10100 I%
b10100 J%
b10000 [#
b10000 K%
b10000 L%
bx q#
bx `%
b1100 Z#
b1100 M%
b1100 ^%
bx f#
bx E%
bx t#
bx |#
bx &$
bx ;%
bx V%
1O#
1M#
#70
0O#
0M#
#75
bx0000000x0000 l%
bx l#
bx =%
bx W%
b10000 Z#
b10000 M%
b10000 ^%
b10100 [#
b10100 K%
b10100 L%
bx \#
bx I%
bx J%
1O#
1M#
#80
0O#
0M#
#85
bx0000000x0x00 l%
bx [#
bx K%
bx L%
b10100 Z#
b10100 M%
b10100 ^%
1O#
1M#
#90
0O#
0M#
#95
bx l%
bx Z#
bx M%
bx ^%
1O#
1M#
#100
0O#
0M#
#105
1O#
1M#
#110
0O#
0M#
#115
1O#
1M#
#120
0O#
0M#
#125
1O#
1M#
#130
0O#
0M#
#135
1O#
1M#
#140
0O#
0M#
#145
1O#
1M#
#150
0O#
0M#
#155
1O#
1M#
#160
0O#
0M#
#165
1O#
1M#
#170
0O#
0M#
#175
1O#
1M#
#180
0O#
0M#
#185
1O#
1M#
#190
0O#
0M#
#195
1O#
1M#
#200
0O#
0M#
